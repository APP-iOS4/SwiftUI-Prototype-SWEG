//
//  InquiryView.swift
//  Sweg
//
//  Created by ÍπÄÏÑ±ÎØº on 2/20/24.
//

import SwiftUI

struct InquiryView: View {
    @Binding var selectedTabIndex: Int
    
    var body: some View {
        NavigationStack {
            List {
                Section("Ïù¥Î≤à Îã¨ Í≥µÍ≥ºÍ∏à") {
                    ThisMonthUtilityView()
                }
                
                Section {
                    YearOnYearView()
                }
                
                Section("ÏµúÍ∑º 3Í∞úÏõî Í≥µÍ≥ºÍ∏à") {
                    LastThreeMonthlyUtiliesView()
                }
                
                Section {
                    SectionForChartView(selectedTabIndex: $selectedTabIndex)
                }
                
                Section {
                    SectionForBoardView(selectedTabIndex: $selectedTabIndex)
                }
            }
            .navigationTitle("Ï°∞Ìöå Î∞è ÎÇ©Î∂Ä")
            .navigationBarTitleDisplayMode(.inline)
            .listSectionSpacing(20)
        }
    }
}

#Preview {
    InquiryView(selectedTabIndex: .constant(1))
}

struct ThisMonthUtilityView: View {
    var monthlyUtilityStore = MonthlyUtilityStore()
    
    private var yearOfThisMonth: String { monthlyUtilityStore.monthlyUtilities.last?.yearString ?? "" }
    private var thisMonth: Int { monthlyUtilityStore.monthlyUtilities.last?.month ?? 0 }
    private var waterBill: Int { monthlyUtilityStore.monthlyUtilities.last?.utility.water ?? 0 }
    private var electricityBill: Int { monthlyUtilityStore.monthlyUtilities.last?.utility.electricity ?? 0 }
    private var gasBill: Int { monthlyUtilityStore.monthlyUtilities.last?.utility.gas ?? 0 }
    private var totalBill: Int { monthlyUtilityStore.monthlyUtilities.last?.utility.total ?? 0 }
    
    @State var isShowingPaymentWayView: Bool = false
    @State var isShowingChangeAccountSheet: Bool = false
    
    var body: some View {
        VStack {
            Grid {
                HStack {
                    VStack(alignment: .leading) {
                        HStack {
                            Text("\(yearOfThisMonth)ÎÖÑ \(thisMonth)Ïõî")
                                .fontWeight(.semibold)
                            Spacer()
                        }
                        Text("24. 2. 1 ~ 24. 2. 29")
                            .font(.caption)
                    }
                }
            }
            
            HStack {
                Spacer()
                Text("\(totalBill)Ïõê")
                    .font(.title)
                    .fontWeight(.bold)
                    .padding(.top, 1)
                    .padding(.bottom)
            }
            
            Grid(verticalSpacing: 10) {
                HStack {
                    Text("üíß ÏàòÎèÑ ÏöîÍ∏à")
                    Text("18„é•")
                        .font(.caption)
                    Spacer()
                    Text("\(waterBill)Ïõê")
                }
                HStack {
                    Text("‚ö°Ô∏è Ï†ÑÍ∏∞ ÏöîÍ∏à")
                    Text("93kWh")
                        .font(.caption)
                    Spacer()
                    Text("\(electricityBill)Ïõê")
                }
                HStack {
                    Text("üî• Í∞ÄÏä§ ÏöîÍ∏à")
                    Text("15„é•")
                        .font(.caption)
                    Spacer()
                    Text("\(gasBill)Ïõê")
                }
            }
            .padding(.leading)
            .padding(.trailing)
            .padding(.bottom)
        }
        
        HStack {
            Spacer()
            Button(action: {
                print("Hello")
                isShowingPaymentWayView.toggle()
            }, label: {
                Text("ÎÇ©Î∂ÄÌïòÍ∏∞")
                    .font(.title3)
                    .fontWeight(.bold)
                    .foregroundStyle(.white)
            })
            Spacer()
        }
        .listRowBackground(Color.accentColor)
        .sheet(isPresented: $isShowingPaymentWayView) {
            NavigationStack {
                Form {
                    Section {
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            PaymentWayButtonView(imageString: "kakaopay", message: "Ïπ¥Ïπ¥Ïò§ÌéòÏù¥")
                        }
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            PaymentWayButtonView(imageString: "naverpay", message: "ÎÑ§Ïù¥Î≤ÑÌéòÏù¥")
                        }
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            PaymentWayButtonView(imageString: "payco", message: "ÌéòÏù¥ÏΩî")
                        }
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            PaymentWayButtonView(imageString: "tosspay", message: "ÌÜ†Ïä§ÌéòÏù¥")
                        }
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            Label("Ïã§ÏãúÍ∞Ñ Í≥ÑÏ¢åÏù¥Ï≤¥", systemImage: "wonsign.square")
                        }
                        NavigationLink {
                            PaymentView(isShowingPaymentWayView: $isShowingPaymentWayView)
                        } label: {
                            Label("Ïã†Ïö©/Ï≤¥ÌÅ¨Ïπ¥Îìú ÎÇ©Î∂Ä", systemImage: "creditcard")
                        }
                    }
                    
                    Section {
                        VStack(alignment: .leading) {
                            Text("Îß§Îã¨ Í≥µÍ≥ºÍ∏à ÎÇ©Î∂ÄÍ∞Ä Í∑ÄÏ∞ÆÎã§Î©¥?")
                                .font(.subheadline)
                            Text("ÏûêÎèôÏù¥Ï≤¥ Îì±Î°ùÏúºÎ°ú Í∞ÑÎã®ÌïòÍ≤å ÎÇ©Î∂Ä!")
                                .font(.title3)
                                .fontWeight(.bold)
                                .foregroundStyle(.accent)
//                            Image(systemName: "creditcard")
//                                .resizable()
//                                .aspectRatio(contentMode: .fit)
//                                .frame(width: 40)
//                                .padding(.leading)
                        }
                        HStack {
                            Spacer()
                            Button(action: {
                                isShowingChangeAccountSheet.toggle()
                            }, label: {
                                HStack {
                                    Text("Îì±Î°ùÌïòÎü¨ Í∞ÄÍ∏∞")
                                    Image(systemName: "chevron.right")
                                }
                            })
                            .foregroundStyle(.primary)
                        }
                        .listRowSeparator(.hidden)
                    }
                    .sheet(isPresented: $isShowingChangeAccountSheet, content: {
                        RegisterAccountView(isShowingPaymentWayView: $isShowingPaymentWayView)
                    })
                    
                    Section {
                        HStack {
                            Spacer()
                            Button(role: .cancel, action: {
                                isShowingPaymentWayView.toggle()
                            }, label: {
                                Text("Îã´Í∏∞")
                            })
                            Spacer()
                        }
                    }
                }
                .navigationTitle("ÎÇ©Î∂Ä Î∞©Î≤ï ÏÑ†ÌÉùÌïòÍ∏∞")
                .navigationBarTitleDisplayMode(.inline)
            }
        }
    }
}

struct YearOnYearView: View {
    var body: some View {
        VStack {
            VStack(alignment: .leading) {
                HStack {
                    Text("Ï†ÑÎÖÑÎèôÏõîÎπÑ")
                        .fontWeight(.semibold)
                    Spacer()
                }
                Text("23. 2. 1 ~ 23. 2. 29")
                    .font(.caption)
            }
            HStack {
                Spacer()
                VStack(alignment: .trailing) {
                    HStack(alignment: .lastTextBaseline) {
                        Text("10.4% Ï¶ùÍ∞Ä")
                            .font(.title2)
                            .fontWeight(.bold)
                            .padding(.top, 1)
                            .foregroundStyle(.accent)
                        Text("ÌñàÏñ¥Ïöî")
                            .padding(.leading, -5)
                            .fontWeight(.bold)
                    }
                    Text("37,450Ïõê")
                }
            }
        }
    }
}

struct LastThreeMonthlyUtiliesView: View {
    var monthlyUtilityStore = MonthlyUtilityStore()
    
    private var yearOfLastMonth: String { monthlyUtilityStore.monthlyUtilities.dropLast().last?.yearString ?? "" }
    private var lastMonth: Int { monthlyUtilityStore.monthlyUtilities.dropLast().last?.month ?? 0 }
    private var billOfLastMonth: Int { monthlyUtilityStore.monthlyUtilities.dropLast().last?.utility.total ?? 0 }
    
    private var yearOfTwoMonthsAgo: String { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().last?.yearString ?? "" }
    private var TwoMonthsAgo: Int { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().last?.month ?? 0 }
    private var billOfTwoMonthsAgo: Int { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().last?.utility.total ?? 0 }
    
    private var yearOfThreeMonthsAgo: String { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().dropLast().last?.yearString ?? "" }
    private var ThreeMonthsAgo: Int { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().dropLast().last?.month ?? 0 }
    private var billOfThreeMonthsAgo: Int { monthlyUtilityStore.monthlyUtilities.dropLast().dropLast().dropLast().last?.utility.total ?? 0 }
    
    var body: some View {
        Group {
            VStack {
                VStack(alignment: .leading) {
                    HStack {
                        Text("\(yearOfLastMonth)ÎÖÑ \(lastMonth)Ïõî")
                            .fontWeight(.semibold)
                        Spacer()
                    }
                    Text("24. 1. 1 ~ 24. 1. 31")
                        .font(.caption)
                }
                HStack {
                    Spacer()
                    Text("\(billOfLastMonth)Ïõê")
                        .font(.title2)
                        .fontWeight(.bold)
                        .padding(.top, 1)
                }
            }
            
            VStack {
                VStack(alignment: .leading) {
                    HStack {
                        Text("\(yearOfTwoMonthsAgo)ÎÖÑ \(TwoMonthsAgo)Ïõî")
                            .fontWeight(.semibold)
                        Spacer()
                    }
                    Text("23. 12. 1 ~ 23. 12. 31")
                        .font(.caption)
                }
                HStack {
                    Spacer()
                    Text("\(billOfTwoMonthsAgo)Ïõê")
                        .font(.title2)
                        .fontWeight(.bold)
                        .padding(.top, 1)
                }
            }
            
            VStack {
                VStack(alignment: .leading) {
                    HStack {
                        Text("\(yearOfThreeMonthsAgo)ÎÖÑ \(ThreeMonthsAgo)Ïõî")
                            .fontWeight(.semibold)
                        Spacer()
                    }
                    Text("23. 11. 1 ~ 23. 11. 30")
                        .font(.caption)
                }
                HStack {
                    Spacer()
                    Text("\(billOfThreeMonthsAgo)Ïõê")
                        .font(.title2)
                        .fontWeight(.bold)
                        .padding(.top, 1)
                }
            }
        }
    }
}
